/**
* Responsive mixins
*/

@mixin responsive($res) {
	@if (unitless($res)) {
		$res: #{$res - 1}px;
	} @else {
		$res: $res - 1px;
	}

	@media screen and (max-width: $res) {
		@content;
	}
}

@mixin mobilefirst($res) {
	@if (unitless($res)) {
		$res: #{$res}px;
	}

	@media screen and (min-width: $res) {
		@content;
	}
}

/* Variable functions */
@function wp-color($color) {
	@return var(--wp--preset--color--#{$color});
}

/**
* Better Clamp function for fonts etc
*/

@mixin betterClamp($property, $minSize, $maxSize, $minWidth: 480, $maxWidth: 1920) {
	// convert to rem
	$minSize: calc($minSize / 16);
	$maxSize: calc($maxSize / 16);
	$maxWidth: calc($maxWidth / 16);
	$minWidth: calc($minWidth / 16);
	// do calculations
	$slope: calc(($maxSize - $minSize) / ($maxWidth - $minWidth));
	$yAxisIntersection: -$minWidth * $slope + $minSize;
	$preferredValue: #{$yAxisIntersection * 1rem} + ' + ' + #{$slope * 100vw};
	// output as rem
	$minSize: $minSize * 1rem;
	$maxSize: $maxSize * 1rem;

	@if $minSize > $maxSize {
		#{$property}: clamp($maxSize, $preferredValue, $minSize);
	} @else {
		#{$property}: clamp($minSize, $preferredValue, $maxSize);
	}
}
